name: Python Code Quality Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        # نسحب كامل تاريخ الفرع لضمان عمل أوامر git بشكل سليم
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff black pytest

      # ✏️ الخطوة 1: المزامنة أولاً (مهم جدًا)
      # نقوم بمزامنة أي تغييرات حدثت على GitHub قبل أن نبدأ
      - name: Synchronize with remote branch
        run: git pull --rebase

      # ✏️ الخطوة 2: الاختبار المبدئي (اختياري ولكنه جيد)
      # نتأكد أن الكود سليم قبل أن نقوم بتنسيقه
      - name: Run tests on original code
        run: pytest

      # ✏️ الخطوة 3: الآن نقوم بالتنسيق والتعديل
      - name: Lint and fix with ruff
        run: ruff check . --fix

      - name: Format code with black
        run: black .

      # ✏️ الخطوة 4: نحفظ التغييرات الناتجة عن التنسيق فقط
      - name: Commit formatting changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "style: Auto-format code with black and ruff"
          # هذا الإعداد يضمن أن الـ commit سيتم على الفرع الصحيح دائمًا
          branch: ${{ github.head_ref || github.ref_name }}
